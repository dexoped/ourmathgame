<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.tailwindcss.com"></script>
    <title>Quiz Screen</title>
</head>
<body style="background: linear-gradient(162deg,#8FF277 37%, #05F9DC 100%); height: 140vh;">
    <div class="h-15 border-8 border-green-300 bg-green-300 flex items-center justify-center" style="height: 80px;">
        <div class="absolute left-4">
          <button onclick="window.history.back()"
            class="bg-yellow-300 hover:bg-yellow-400 text-black font-bold py-2 px-4 rounded-full text-3xl w-16 h-16 flex items-center justify-center">
            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
          </button>
        </div>
        <h1 class="text-4xl font-bold">Our Math Game</h1>
      </div>
    <div class="container mx-auto p-4 flex-grow flex flex-col items-center">
        <div class="w-full max-w-4xl bg-opacity-50 bg-white p-8 rounded-lg shadow-lg">
            <div class="flex justify-center items-center mb-4">
                <div class=" text-white p-2 rounded-full text-xl" style="background: linear-gradient(#11FD7E 0%, #0A8797 100%);">
                    <span id="timer" class="p-8 text-5xl">00:00:00</span>
                </div>
            </div>
            <div id="questions" class="space-y-4 mx-10">
                <!-- Questions will be dynamically inserted here -->
            </div>
            <div class="flex justify-center mt-6">
                <button id="submit-button" class=" text-white py-2 px-6 rounded-lg text-xl" style="background-color: #0400CB;" onclick="submitAnswers()">Submit</button>
            </div>
        </div>
    </div>

    <script>
        let startTime;
        let timerInterval;

        function getQueryParams() {
            const params = new URLSearchParams(window.location.search);
            return {
                operator: params.get('operator'),
                difficulty: params.get('difficulty')
            };
        }

        function startTimer() {
            startTime = Date.now();
            const timerElement = document.getElementById("timer");
            timerInterval = setInterval(() => {
                const elapsedTime = Date.now() - startTime;
                const seconds = Math.floor((elapsedTime / 1000) % 60);
                const minutes = Math.floor((elapsedTime / 1000 / 60) % 60);
                const hours = Math.floor((elapsedTime / 1000 / 60 / 60));
                timerElement.textContent = 
                    `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
            }, 1000);
        }

        function generateRandomNumber(difficulty) {
            if (difficulty === 'easy') return Math.floor(Math.random() * 10);
            if (difficulty === 'medium') return Math.floor(Math.random() * 90) + 1;
            return Math.floor(Math.random() * 90) + 10;
        }

        function generateQuestions(operator, difficulty) {
            const questionsContainer = document.getElementById('questions');
            questionsContainer.innerHTML = '';
            for (let i = 0; i < 10; i++) {
                const num1 = generateRandomNumber(difficulty);
                const num2 = generateRandomNumber(difficulty);
                const question = document.createElement('div');
                question.className = 'flex items-center justify-between p-2 bg-blue-200 rounded-lg';
                question.innerHTML = `
                    <span class="text-xl text-center mt-2"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;${num1} &nbsp; &nbsp;${operator}&nbsp;&nbsp; ${num2}&nbsp;&nbsp; = </span>
                    <input type="text" class="answer-input w-24 mx-4 p-2 rounded-lg shadow" data-num1="${num1}" data-operator="${operator}" data-num2="${num2}">
                    <span class="correct-answer"></span>
                `;
                questionsContainer.appendChild(question);
            }
        }

        function submitAnswers() {
            const inputs = document.querySelectorAll('.answer-input');
            let correctAnswersCount = 0;
            inputs.forEach(input => {
                const num1 = parseInt(input.getAttribute('data-num1'));
                const operator = input.getAttribute('data-operator');
                const num2 = parseInt(input.getAttribute('data-num2'));
                let correctAnswer;
                switch (operator) {
                    case '+': correctAnswer = num1 + num2; break;
                    case '-': correctAnswer = num1 - num2; break;
                    case '*': correctAnswer = num1 * num2; break;
                    case '/': correctAnswer = (num1 / num2).toFixed(2); break;
                }
                const userAnswer = parseFloat(input.value);
                const answerDisplay = input.nextElementSibling;
                answerDisplay.textContent = `Correct: ${correctAnswer}`;
                answerDisplay.style.display = 'block';
                if (userAnswer === correctAnswer) {
                    correctAnswersCount++;
                    input.classList.remove('wrong-answer');
                    input.classList.add('bg-green-200');
                } else {
                    input.classList.remove('bg-green-200');
                    input.classList.add('bg-red-200');
                }
            });

            clearInterval(timerInterval);

            const totalTime = (Date.now() - startTime) / 1000; // total time in seconds
            const accuracy = (correctAnswersCount / inputs.length) * 100;
            const speed = totalTime / inputs.length; // average time per question in seconds

            fetch('/submit-quiz', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ accuracy, speed, totalTime })
            }).then(response => {
                if (response.ok) {
                    console.log('Quiz results submitted successfully');
                } else {
                    console.log('Failed to submit quiz results');
                }
            });

            // Update button to redirect to dashboard
            const submitButton = document.getElementById('submit-button');
            submitButton.textContent = 'Home';
            submitButton.onclick = function() {
                window.location.href = '/Dash';
            };
        }

        window.onload = function() {
            const params = getQueryParams();
            const selectedOperator = params.operator;
            const selectedDifficulty = params.difficulty;
            if (!selectedOperator || !selectedDifficulty) {
                console.error('Operator or difficulty not found in URL parameters.');
                return;
            }

            generateQuestions(selectedOperator, selectedDifficulty);
            startTimer();
        };
    </script>
</body>
</html>
